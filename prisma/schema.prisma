// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String?    @default("")
  price       Float
  image       String?
  categories  Category[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  cartItem    CartItem[]
}

model Category {
  id            Int         @id @default(autoincrement())
  name          String
  description   String?     @default("")
  icon          String?
  product       Product     @relation(fields: [productId], references: [id])
  productId     Int
  subcategory   SubCategory @relation(fields: [subcategoryId], references: [id])
  subcategoryId Int
}

model SubCategory {
  id         Int        @id @default(autoincrement())
  name       String
  url        String
  categories Category[]
}

model Order {
  id                  Int    @id @default(autoincrement())
  intent              INTENT @default(CAPTURE)
  purchase_units      Json[]
  application_context Json
  cart                Cart[]
}

model Cart {
  id             Int        @id @default(autoincrement())
  userId         Int
  user           User       @relation(fields: [userId], references: [id])
  orderId        Int
  orders         Order      @relation(fields: [orderId], references: [id])
  items          CartItem[]
  currency       String
  discountAmount Int
  taxAmount      Int
  shippingAmount Int
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @default(now())
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  cart      Cart     @relation(fields: [cartId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
  addedAt   DateTime @default(now())
}

model User {
  id       Int     @id @default(autoincrement())
  name     String? @default("user name")
  lastname String? @default("user lastname")
  email    String  @unique
  address  String
  password String
  role     Role?   @default(USER)
  cart     Cart[]
}

enum Role {
  ADMIN
  USER
}

enum INTENT {
  CAPTURE
  AUTHORIZE
}
