// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int             @id @default(autoincrement())
  name          String
  description   String?         @default("")
  price         Float
  image         String?
  categories    Category[]
  cart          Cart[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Category {
  id            Int         @id @default(autoincrement())
  name          String
  description   String?     @default("")
  icon          String?
  product       Product     @relation(fields: [productId], references: [id])
  productId     Int
  subcategory   SubCategory @relation(fields: [subcategoryId], references: [id])
  subcategoryId Int
}

model SubCategory {
  id         Int        @id @default(autoincrement())
  name       String
  url        String
  categories Category[]
}

model Order {
  id                  Int           @id @default(autoincrement())
  intent              INTENT        @default(CAPTURE)
  purchase_units      Json[]
  application_context Json
  cart                Cart[]
}
/* 
model PurchaseUnits {
  id              Int     @id @default(autoincrement())
  description     String
  custom_id       String
  invoice_id      String
  soft_descriptor String
  items           Product @relation(fields: [itemsId], references: [id])
  amount          Json
  order           Order[]
  itemsId         Int
} */

model Cart {
  id            Int     @id @default(autoincrement())
  productId     Int
  product       Product @relation(fields: [productId], references: [id])
  paymentId     Int
  payment       Payment @relation(fields: [paymentId], references: [id])
  method_sendId Int
  method_send   Send    @relation(fields: [method_sendId], references: [id])
  userId        Int
  user          User    @relation(fields: [userId], references: [id])
  orderId       Int
  orders        Order   @relation(fields: [orderId], references: [id])
}

model Payment {
  id             Int            @id @default(autoincrement())
  method_payment Method_Payment @default(CARD_CREDIT)
  discount       Float
  Cart           Cart[]
}

model Send {
  id            Int         @id @default(autoincrement())
  method_send   Method_Send @default(MESSAGING_FREE)
  discount_send Float
  address       String
  cart          Cart[]
}

model User {
  id       Int     @id @default(autoincrement())
  name     String? @default("user name")
  lastname String? @default("user lastname")
  email    String  @unique
  address  String
  password String
  role     Role?   @default(USER)
  cart     Cart[]
}

enum Role {
  ADMIN
  USER
}

enum Method_Payment {
  LINK_PAYMENT
  CARD_CREDIT
}

enum INTENT {
  CAPTURE
  AUTHORIZE
}

enum Method_Send {
  MESSAGING_FREE
  MESSAGING_PAY
  EXPRESS_FAST
}
